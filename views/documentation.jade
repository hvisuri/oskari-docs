extends layout

block main
  div.row
    div.col-md-12

      :markdown
          # Documentation
          Oskari is an Open source distributed and extensible geoportal built with Java and Javascript. The goal is to help businesses and municipalities offer better online and mobile map services to their citizens and consumers. Take a look at the [features](/documentation/features) it provides and the [roadmap](/documentation/development/roadmap) for things on their way. A sample application is provided as [download](/download) and live demo http://demo.oskari.org. ([Read more](/documentation/development_basics))

  div.row
    div.col-md-4
      :markdown
        #### Running an Oskari instance
        * [Architecture](/documentation/architecture_basics)
        * [Setup database](/documentation/backend/setup-database)
        * [Setup Jetty](/documentation/backend/setup-jetty)
        * [Setup Redis](/documentation/backend/setup-redis) (Optional)
        * [Setup Geoserver](/documentation/backend/setup-geoserver) (Optional)
        * [Setup development environment](/documentation/backend/setup-development) (Optional)
        * [Setup nginx](/guides/nginx-config) (Optional)
        * [Optimizing for production](/documentation/minification)

    div.col-md-4
      :markdown
        #### Customizing Oskari
        * [Create a customized Oskari-server](/documentation/backend/setup-server-extension)
        * [Configuring a map projection](/documentation/configuring_map_projection)
        * [Customize properties](/documentation/backend/customize-properties)
        * [Command-line database setup for custom content](/documentation/backend/database-populate)
        * [Customizing the search functionality](/documentation/features/search)
        * [Enabling thematic maps](/documentation/features/thematicmaps)
        * [Customize demo users](/documentation/features/usermanagement/database-customize-users)
        * [Installing the transport (WFS) service](/documentation/backend/installing-transport)
        * [Enabling wfs-t (editing of wfs layer features)](/documentation/backend/installing-wfst)
        * [Enabling the my places module](/documentation/backend/enabling-myplaces)
        * [Enabling the analysis module](/documentation/backend/enabling-analyse)
        * [Enabling the user data store](/documentation/backend/enabling-user-data-store)
        * [User authentication](/documentation/features/usermanagement/authentication)

    div.col-md-4
      div.panel.panel-info
        div.panel-heading
          h4 Using a hosted Oskari - RPC
          :markdown
            One of the features of Oskari is the ability to embed a map to another website. RPC-functionality allows a developer to control the embedded map and react to events on the map from the embedding website. ([Read more](/documentation/rpc/index))

            * [RPC usage](/examples/rpc-api/rpc_example.html)
            * [Request API](/api/requests)
            * [Events API](/api/events)

  div.row
    div.col-md-12

      :markdown
          # Frontend & Server reference

  div.row
    div.col-md-12
        div.panel.panel-warning
          div.panel-heading
            h4. Frontend

          div.panel-body
            :markdown
                The user interface is a [Javascript-based](https://github.com/oskariorg/oskari-frontend) single-page app built by selecting a series of [modules](/api/bundles) that provide features for an application. The modules provide a documented API for interaction and/or easy replacement for a new implementation of a feature. You can mix and match the modules or create new ones to customize the application for your needs.

            div.row
              div.col-md-4
                :markdown
                  * [Architecture](/documentation/development/architecture)
                  * [UXGuide for Oskari](/files/Oskari-UXGuide_EN-18-11-2015.pdf)
                  * [Folder structure in code](/documentation/directory-structure)
                  * [Mobile mode](/documentation/core-concepts/mobile-mode)
                  * [Localization](/documentation/development/localization)
                  * [Tools](/documentation/development/tools)
                  * [Supported/used 3rd party Javascript libraries](/documentation/libraries)
                  * [Adding 3rd party Javascript libraries](/documentation/development/adding-libraries)
                  * [Feature: changing mode](/documentation/development/changing-mode) (outdated?)

              div.col-md-4
                :markdown
                  * [Oskari Application](/documentation/core-concepts/oskari-application)
                  * [Oskari Bundle](/documentation/core-concepts/oskari-bundle)
                   * [Oskari bundle manager/loader](/documentation/core-concepts/bundle-manager)
                   * [Bundle docs](/api/bundles)
                  * [Oskari class](/documentation/core-concepts/oskari-class)
                  * [Module](/documentation/protocol/module)
                  * [Oskari core and sandbox](/documentation/core-concepts/oskari-core)
                  * [Bundle communication: Request](/documentation/core-concepts/oskari-request)
                   * [List of Oskari requests](/api/requests)
                  * [Bundle communication: Event](/documentation/core-concepts/oskari-event)
                   * [List of Oskari events](/api/events)
                  * [Map plugin](/documentation/core-concepts/map-plugin)

                  * [Bundle configuration](/documentation/core-concepts/oskari-bundle-configuration)
                  * [Maplayer definitions](/documentation/data/maplayer-definitions)
                   * [WMS layer data structure](/documentation/data/wms-layer)
                   * [Base/Group layer data structure](/documentation/data/base-layer)
                   * [WFS layer data structure](/documentation/data/wfs-layer)
                   * [ArcGis93 layer data structure](/documentation/data/arcgis93layer)

              div.col-md-4
                :markdown
                  #### UI Components

                  All components are currently part of the `divmanazer` bundle.

                  * [Popup](/documentation/components/popup)
                  * [Button](/documentation/components/button)
                  * [Overlay](/documentation/components/overlay)
                  * [Accordion](/documentation/components/accordion)
                  * [Form](/documentation/components/form)
                  * [Grid](/documentation/components/grid)
                  * [Tab container](/documentation/components/tab-container)



  div.row
    div.col-md-12
        div.panel.panel-warning
          div.panel-heading
            h4. Server

          div.panel-body
            :markdown
              The [oskari-server](https://github.com/oskariorg/oskari-server) is built with Java and Maven. It provides deployable webapps for managing and launching the user interface for Oskari-based apps. It also provides [endpoints (action routes)](/documentation/backend/actionroutes) for http-requests triggered by the frontend.

            div.row
              div.col-md-4
                :markdown
                  * [Architecture](/documentation/backend/architecture_backend)
                  * [Components](/documentation/architecture/components)
                  * [Database tables](/documentation/backend/database-tables)
                  * [Database structure](/documentation/architecture/database)
                  * [WFS backend (transport)](/documentation/architecture/wfs)
                  * [Folder structure in code (requires updating)](/documentation/backend/overview)
                  * [Configuring dataset import](/documentation/backend/configuring-dataset-import)
              div.col-md-4
                :markdown
                  * Action routes
                   * [Adding action routes](/documentation/backend/adding-action-routes)
                   * [Action routes](/documentation/backend/actionroutes)
                  * [Adding bundles based on role](/documentation/backend/adding-bundles)
                  * [Search channels](/documentation/features/search)

              div.col-md-4
                :markdown
                  * [Upgrading backend](/documentation/backend/upgrading)
                  * [Writing upgrade scripts](/documentation/backend/upgrade_scripts)
                  * [User management](/documentation/features/usermanagement)
                  * [Layer permissions](/documentation/backend/permissions)
                  * [Adding user guide](/documentation/backend/adding-user-guide)

  :markdown
    # Guides

  div.container
    div.col-md-12
      div.row
        :markdown
          ## Getting started
          #### What is your aim?

      div.col-md-6
        div.panel.panel-warning
          div.panel-heading
            h4. I want to learn about the modular User Interface

          div.panel-body
            :markdown
              This guide gives you a quick start to Oskari UI development.

              1. [Introduction to Oskari Frontend development](/guides/quick-start/my-first-bundle)
              2. [Bundle documentation](/api/bundles)
              3. [List of Oskari requests](/api/requests)
              4. [List of Oskari events](/api/events)
              5. [Frontend documentation](/documentation)

      div.col-md-6
        div.panel.panel-warning
          div.panel-heading
            h4. I want to take full advantage of Oskari

          div.panel-body
            :markdown
              These steps are all you need to setup the Oskari stack and get started on developing your custom application.

              1. [Setup database](/documentation/backend/setup-database)
              2. [Setup Redis](/documentation/backend/setup-redis) (Optional, needed for WFS/Print)
              3. [Setup Jetty](/documentation/backend/setup-jetty)
              4. [Setup development environment](/documentation/backend/setup-development)
    <hr>

    div.row
      div.col-md-6
        :markdown
          ## Other guides:
          * [Oskari RPC examples](/examples/rpc-api/rpc_example.html)
          * [Case example of reporting tool using RPC](/examples/rpc-control/index.html)
          * [RPC step by step](/guides/rpc-step-by-step)
          * [Enabling Oskari events in RPC](/guides/rpc-events)
          * [Oskari 2.0 Migration Guide](/guides/Oskari_2_Migration_Guide)
          * [Open311 RPC example](/examples/rpc-control/open311service.html)
      div.col-md-6
        :markdown
          ## See the frequently asked questions for more advice
          * [FAQ](/documentation/faq)

  :markdown
    # Code examples
  div.container
    div.row
      div.col-md-4
        :markdown
          ## Sample definitions:
          * [Sample bundle definition](/guides/quick-start/sample-bundle-definition)
          * [Sample instance definition](/guides/quick-start/sample-instance-definition)
          * [Sample request definition](/documentation/core-concepts/oskari-request)
          * [Sample request handler definition](/documentation/core-concepts/oskari-request)

      div.col-md-4
          :markdown
              ## Hooks for custom extensions:
              * [Adding action routes](/documentation/backend/adding-action-routes)
              * [Adding search channels](/documentation/features/search)

        div.col-md-4
        :markdown
          ## Case examples:
          * [Installing parcel application](/documentation/backend/custom-install-parcel)

    div.row
      div.col-md-4
        :markdown
          ## Frontend examples:
          * [Overriding Oskari.org bundle locales](/documentation/frontend/override-locales)
